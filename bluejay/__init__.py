"""Statistical plotting templates for climate applications."""

# Copyright 2022, European Centre for Medium Range Weather Forecasts.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


from . import climatology, figures, heatmaps, lines  # noqa: F401
from .schema import schema  # noqa: F401

try:
    # NOTE: the `version.py` file must not be present in the git repository
    #   as it is generated by setuptools at install time
    from .version import __version__
except ImportError:  # pragma: no cover
    # Local copy or not installed with setuptools
    __version__ = "999"


def create_figure_if_none(figure=figures.figure):
    def decorator(function):
        def wrapper(*args, fig=None, **kwargs):
            if fig is None:
                fig = figure()
            return function(*args, fig=fig, **kwargs)

        return wrapper

    return decorator


@create_figure_if_none()
def line(*args, fig=None, **kwargs):
    fig.add_trace(lines.line(*args, **kwargs))
    return fig


@create_figure_if_none()
def envelope(*args, fig=None, **kwargs):
    for trace in lines.envelope(*args, **kwargs):
        fig.add_trace(trace)
    return fig


@create_figure_if_none(figures.heatmap_figure)
def stripes(*args, fig=None, **kwargs):
    if fig is None:
        fig = heatmaps.heatmap_figure()
    fig.add_trace(heatmaps.stripes(*args, **kwargs))
    return fig
